// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator #generate CJS (non-ESM) generates the documentation 1`] = `
"<!-- begin rules list -->

| Name                           | Description   |
| :----------------------------- | :------------ |
| [no-foo](docs/rules/no-foo.md) | disallow foo. |

<!-- end rules list -->"
`;

exports[`generator #generate CJS (non-ESM) generates the documentation 2`] = `
"# Disallow foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate Missing plugin package.json \`name\` field throws an error 1`] = `"Could not find \`name\` field in ESLint plugin's package.json."`;

exports[`generator #generate Missing plugin package.json throws an error 1`] = `"Could not find package.json of ESLint plugin."`;

exports[`generator #generate No configs found omits the config column 1`] = `
"<!-- begin rules list -->

| Name                           | Description   |
| :----------------------------- | :------------ |
| [no-foo](docs/rules/no-foo.md) | disallow foo. |

<!-- end rules list -->"
`;

exports[`generator #generate No configs found omits the config column 2`] = `
"# Disallow foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate No exported rules object found throws an error 1`] = `"Could not find exported \`rules\` object in ESLint plugin."`;

exports[`generator #generate README missing rule list markers and no rules section throws an error 1`] = `"README.md is missing rules list markers: <!-- begin rules list --><!-- end rules list -->"`;

exports[`generator #generate README missing rule list markers but with rules section adds rule list markers to rule section 1`] = `
"# eslint-plugin-test

Foo.

## Rules
<!-- begin rules list -->

| Name                           | Description            |
| :----------------------------- | :--------------------- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |

<!-- end rules list -->

Old rules list.

## Other

Bar."
`;

exports[`generator #generate Rule description needs to be formatted capitalizes the first letter and removes the trailing period from the description 1`] = `
"# Disallow foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate Scoped plugin name determines the correct plugin prefix 1`] = `
"# Disallow foo (\`@my-scope/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate adds extra column to rules table for TypeScript rules updates the documentation 1`] = `
"<!-- begin rules list -->

üíº Configurations enabled in.\\
üí≠ Requires type information.

| Name                           | Description            | üíº       | üí≠  |
| :----------------------------- | :--------------------- | :------- | :-- |
| [no-bar](docs/rules/no-bar.md) | Description of no-bar. |          | üí≠  |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | ![all][] |     |

<!-- end rules list -->"
`;

exports[`generator #generate config that extends another config generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

‚úÖ Enabled in the \`recommended\` configuration.

| Name                           | Description            | ‚úÖ  |
| :----------------------------- | :--------------------- | :-- |
| [no-bar](docs/rules/no-bar.md) | Description of no-bar. | ‚úÖ  |
| [no-baz](docs/rules/no-baz.md) | Description of no-baz. | ‚úÖ  |
| [no-biz](docs/rules/no-biz.md) | Description of no-biz. | ‚úÖ  |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | ‚úÖ  |

<!-- end rules list -->
"
`;

exports[`generator #generate config that extends another config generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate config that extends another config generates the documentation 3`] = `
"# Description of no-bar (\`test/no-bar\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate config that extends another config generates the documentation 4`] = `
"# Description of no-baz (\`test/no-baz\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate config that extends another config generates the documentation 5`] = `
"# Description of no-biz (\`test/no-biz\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate config with overrides generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

‚úÖ Enabled in the \`recommended\` configuration.

| Name                           | Description            | ‚úÖ  |
| :----------------------------- | :--------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | ‚úÖ  |

<!-- end rules list -->
"
`;

exports[`generator #generate config with overrides generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate deprecated function-style rule generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

‚úÖ Enabled in the \`recommended\` configuration.

| Name                           | ‚úÖ  |
| :----------------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | ‚úÖ  |

<!-- end rules list -->
"
`;

exports[`generator #generate deprecated function-style rule generates the documentation 2`] = `
"# \`test/no-foo\`

<!-- end rule header -->
"
`;

exports[`generator #generate deprecated rule with no rule doc but --ignore-deprecated-rules omits the rule from the README and does not try to update its non-existent rule doc 1`] = `
"<!-- begin rules list -->

| Name |
| :--- |

<!-- end rules list -->"
`;

exports[`generator #generate deprecated rules updates the documentation 1`] = `
"<!-- begin rules list -->

‚ùå Deprecated.

| Name                           | Description  | ‚ùå  |
| :----------------------------- | :----------- | :-- |
| [no-bar](docs/rules/no-bar.md) | Description. | ‚ùå  |
| [no-baz](docs/rules/no-baz.md) | Description. | ‚ùå  |
| [no-foo](docs/rules/no-foo.md) | Description. | ‚ùå  |

<!-- end rules list -->"
`;

exports[`generator #generate deprecated rules updates the documentation 2`] = `
"# Description (\`test/no-foo\`)

‚ùå This rule is deprecated. It was replaced by [no-bar](no-bar.md).

<!-- end rule header -->
"
`;

exports[`generator #generate deprecated rules updates the documentation 3`] = `
"# Description (\`test/no-bar\`)

‚ùå This rule is deprecated.

<!-- end rule header -->
"
`;

exports[`generator #generate deprecated rules updates the documentation 4`] = `
"# Description (\`test/no-baz\`)

‚ùå This rule is deprecated.

<!-- end rule header -->
"
`;

exports[`generator #generate no existing comment markers - minimal doc content generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

üîß Automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems).

| Name                           | Description            | üîß  |
| :----------------------------- | :--------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | üîß  |

<!-- end rules list -->
"
`;

exports[`generator #generate no existing comment markers - minimal doc content generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

üîß This rule is automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).

<!-- end rule header -->
"
`;

exports[`generator #generate no existing comment markers - with no blank lines in existing content generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

üîß Automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems).

| Name                           | Description            | üîß  |
| :----------------------------- | :--------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | üîß  |

<!-- end rules list -->
Existing rules section content."
`;

exports[`generator #generate no existing comment markers - with no blank lines in existing content generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

üîß This rule is automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).

<!-- end rule header -->
Existing rule doc content."
`;

exports[`generator #generate no existing comment markers - with one blank line around existing content generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

üîß Automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems).

| Name                           | Description            | üîß  |
| :----------------------------- | :--------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | üîß  |

<!-- end rules list -->

Existing rules section content."
`;

exports[`generator #generate no existing comment markers - with one blank line around existing content generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

üîß This rule is automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).

<!-- end rule header -->

Existing rule doc content."
`;

exports[`generator #generate no prettier config generates the documentation 1`] = `
"<!-- begin rules list -->

üîß Automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems).

| Name                           | Description            | üîß  |
| :----------------------------- | :--------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | üîß  |

<!-- end rules list -->"
`;

exports[`generator #generate no prettier config generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

üîß This rule is automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).

<!-- end rule header -->
## Rule details
details
Long line that SHOULD NOT get wrapped by prettier since it's outside the header. Long line that SHOULD NOT get wrapped by prettier since it's outside the header.""
`;

exports[`generator #generate no rules with description generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

| Name                           |
| :----------------------------- |
| [no-foo](docs/rules/no-foo.md) |

<!-- end rules list -->
"
`;

exports[`generator #generate no rules with description generates the documentation 2`] = `
"# \`test/no-foo\`

<!-- end rule header -->
"
`;

exports[`generator #generate one rule missing description generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

| Name                           | Description             |
| :----------------------------- | :---------------------- |
| [no-bar](docs/rules/no-bar.md) |                         |
| [no-foo](docs/rules/no-foo.md) | Description for no-foo. |

<!-- end rules list -->
"
`;

exports[`generator #generate one rule missing description generates the documentation 2`] = `
"# Description for no-foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate one rule missing description generates the documentation 3`] = `
"# \`test/no-bar\`

<!-- end rule header -->
"
`;

exports[`generator #generate only a \`recommended\` config updates the documentation 1`] = `
"<!-- begin rules list -->

‚úÖ Enabled in the \`recommended\` configuration.

| Name                           | Description  | ‚úÖ  |
| :----------------------------- | :----------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description. | ‚úÖ  |

<!-- end rules list -->"
`;

exports[`generator #generate only a \`recommended\` config updates the documentation 2`] = `
"# Description (\`test/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate rule config with options generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

‚úÖ Enabled in the \`recommended\` configuration.

| Name                           | Description            | ‚úÖ  |
| :----------------------------- | :--------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | ‚úÖ  |

<!-- end rules list -->
"
`;

exports[`generator #generate rule config with options generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate rule doc without header marker but pre-existing header updates the documentation 1`] = `
"# Description (\`test/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
Pre-existing notice about the rule being recommended.
## Rule details
Details."
`;

exports[`generator #generate rules that are disabled generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

‚úÖ Enabled in the \`recommended\` configuration.

| Name                           | Description            | ‚úÖ  |
| :----------------------------- | :--------------------- | :-- |
| [no-bar](docs/rules/no-bar.md) | Description of no-bar. |     |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     |

<!-- end rules list -->
"
`;

exports[`generator #generate rules that are disabled generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate rules that are disabled generates the documentation 3`] = `
"# Description of no-bar (\`test/no-bar\`)

<!-- end rule header -->
"
`;

exports[`generator #generate successful updates the documentation 1`] = `
"# eslint-plugin-test
Description.
## Rules
<!-- begin rules list -->

üíº Configurations enabled in.\\
üîß Automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems).\\
üí° Manually fixable by editor [suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).

| Name                           | Description            | üíº                  | üîß  | üí°  |
| :----------------------------- | :--------------------- | :------------------ | :-- | :-- |
| [no-bar](docs/rules/no-bar.md) | Description of no-bar. | ![all][] ![style][] | üîß  |     |
| [no-baz](docs/rules/no-baz.md) | Description of no-boz. |                     |     |     |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | ![all][] ‚úÖ         | üîß  | üí°  |

<!-- end rules list -->
more content."
`;

exports[`generator #generate successful updates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

üíº This rule is enabled in the following configs: \`all\`, \`recommended\`.

üîß This rule is automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).

üí° This rule is manually fixable by editor [suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).

<!-- end rule header -->
## Rule details
details
## Options
optionToDoSomething1 - explanation
optionToDoSomething2 - explanation"
`;

exports[`generator #generate successful updates the documentation 3`] = `
"# Description of no-bar (\`test/no-bar\`)

üíº This rule is enabled in the following configs: \`all\`, \`style\`.

üîß This rule is automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).

<!-- end rule header -->
## Rule details
details"
`;

exports[`generator #generate successful updates the documentation 4`] = `
"# Description of no-boz (\`test/no-baz\`)

<!-- end rule header -->
## Rule details
details"
`;

exports[`generator #generate uses prettier config from package.json should wrap prose in rule doc header to just 20 chars 1`] = `
"<!-- begin rules list -->

üíº Configurations
enabled in.

| Name                           | Description            | üíº       |
| :----------------------------- | :--------------------- | :------- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | ![all][] |

<!-- end rules list -->"
`;

exports[`generator #generate uses prettier config from package.json should wrap prose in rule doc header to just 20 chars 2`] = `
"# Description of no-foo (\`test/no-foo\`)

üíº This rule is
enabled in the
following configs:
\`all\`.

<!-- end rule header -->
## Rule details
details
Long line that SHOULD NOT get wrapped by prettier since it's outside the header. Long line that SHOULD NOT get wrapped by prettier since it's outside the header."
`;

exports[`generator #generate with \`--rule-doc-title-format\` option = desc-parens-name uses the right rule doc title format 1`] = `
"# Description for no-foo (\`no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate with \`--rule-doc-title-format\` option = desc-parens-prefix-name uses the right rule doc title format, with fallback when missing description 1`] = `
"# Description for no-foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate with \`--rule-doc-title-format\` option = desc-parens-prefix-name uses the right rule doc title format, with fallback when missing description 2`] = `
"# \`test/no-bar\`

<!-- end rule header -->
"
`;

exports[`generator #generate with \`--rule-doc-title-format\` option = name uses the right rule doc title format 1`] = `
"# \`no-foo\`

<!-- end rule header -->
"
`;

exports[`generator #generate with \`--rule-doc-title-format\` option = prefix-name uses the right rule doc title format 1`] = `
"# \`test/no-foo\`

<!-- end rule header -->
"
`;

exports[`generator #generate with \`--url-configs\` option includes the config link 1`] = `
"## Rules
<!-- begin rules list -->

üíº [Configurations](http://example.com/configs) enabled in.

| Name                           | Description             | üíº                |
| :----------------------------- | :---------------------- | :---------------- |
| [no-bar](docs/rules/no-bar.md) | Description for no-bar. | ![customConfig][] |
| [no-foo](docs/rules/no-foo.md) | Description for no-foo. | ‚úÖ                |

<!-- end rules list -->
"
`;

exports[`generator #generate with \`--url-configs\` option includes the config link 2`] = `
"# Description for no-foo (\`test/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` [config](http://example.com/configs).

<!-- end rule header -->
"
`;

exports[`generator #generate with \`--url-configs\` option includes the config link 3`] = `
"# Description for no-bar (\`test/no-bar\`)

üíº This rule is enabled in the following [configs](http://example.com/configs): \`customConfig\`.

<!-- end rule header -->
"
`;

exports[`generator #generate with \`--url-configs\` option with only recommended config includes the config link 1`] = `
"## Rules
<!-- begin rules list -->

‚úÖ Enabled in the \`recommended\` [configuration](http://example.com/configs).

| Name                           | Description             | ‚úÖ  |
| :----------------------------- | :---------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description for no-foo. | ‚úÖ  |

<!-- end rules list -->
"
`;

exports[`generator #generate with \`--url-configs\` option with only recommended config includes the config link 2`] = `
"# Description for no-foo (\`test/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` [config](http://example.com/configs).

<!-- end rule header -->
"
`;

exports[`generator #generate with --ignore-config hides the ignored config 1`] = `
"## Rules
<!-- begin rules list -->

‚úÖ Enabled in the \`recommended\` configuration.

| Name                           | Description             | ‚úÖ  |
| :----------------------------- | :---------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description for no-foo. | ‚úÖ  |

<!-- end rules list -->
"
`;

exports[`generator #generate with --ignore-config hides the ignored config 2`] = `
"# Description for no-foo (\`test/no-foo\`)

‚úÖ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate with no blank lines around comment markers generates the documentation 1`] = `
"# Rules

No blank line after this.
<!-- begin rules list -->

üîß Automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems).

| Name                           | Description            | üîß  |
| :----------------------------- | :--------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | üîß  |

<!-- end rules list -->
No blank line before this."
`;

exports[`generator #generate with no blank lines around comment markers generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

üîß This rule is automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).

<!-- end rule header -->
No blank line before this."
`;

exports[`generator #generate with one blank line around comment markers generates the documentation 1`] = `
"# Rules

One blank line after this.

<!-- begin rules list -->

üîß Automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems).

| Name                           | Description            | üîß  |
| :----------------------------- | :--------------------- | :-- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | üîß  |

<!-- end rules list -->

One blank line before this."
`;

exports[`generator #generate with one blank line around comment markers generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

üîß This rule is automatically fixable by the \`--fix\` [CLI option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix).

<!-- end rule header -->

One blank line before this."
`;
