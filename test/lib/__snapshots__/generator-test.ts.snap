// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator #generate CJS (non-ESM) generates the documentation 1`] = `
"<!-- begin rules list -->

| Rule                           | Description   | ✅  | 🔧  | 💡  |
| ------------------------------ | ------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | disallow foo. |     |     |     |

<!-- end rules list -->"
`;

exports[`generator #generate CJS (non-ESM) generates the documentation 2`] = `
"# Disallow foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate Missing plugin package.json \`name\` field throws an error 1`] = `"Could not find \`name\` field in ESLint plugin's package.json."`;

exports[`generator #generate Missing plugin package.json throws an error 1`] = `"Could not find package.json of ESLint plugin."`;

exports[`generator #generate No configs found does not crash 1`] = `
"<!-- begin rules list -->

| Rule                           | Description   | ✅  | 🔧  | 💡  |
| ------------------------------ | ------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | disallow foo. |     |     |     |

<!-- end rules list -->"
`;

exports[`generator #generate No configs found does not crash 2`] = `
"# Disallow foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate No exported rules object found throws an error 1`] = `"Could not find exported \`rules\` object in ESLint plugin."`;

exports[`generator #generate README missing rule list markers and no rules section throws an error 1`] = `"README.md is missing rules list markers: <!-- begin rules list --><!-- end rules list -->"`;

exports[`generator #generate README missing rule list markers but with rules section adds rule list markers to rule section 1`] = `
"# eslint-plugin-test

Foo.

## Rules
<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  |
| ------------------------------ | ---------------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     |     |     |

<!-- end rules list -->

Old rules list.

## Other

Bar."
`;

exports[`generator #generate Rule description needs to be formatted capitalizes the first letter and removes the trailing period from the description 1`] = `
"# Disallow foo (\`test/no-foo\`)

<!-- end rule header -->
"
`;

exports[`generator #generate Scoped plugin name determines the correct plugin prefix 1`] = `
"# Disallow foo (\`@my-scope/no-foo\`)

✅ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate adds extra column to rules table for TypeScript rules updates the documentation 1`] = `
"<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  | 💭  |
| ------------------------------ | ---------------------- | --- | --- | --- | --- |
| [no-bar](docs/rules/no-bar.md) | Description of no-bar. |     |     |     | 💭  |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     |     |     |     |

<!-- end rules list -->"
`;

exports[`generator #generate deprecated rule with no rule doc nor meta.docs updates the documentation 1`] = `
"<!-- begin rules list -->

| Rule                           | Description | ✅  | 🔧  | 💡  |
| ------------------------------ | ----------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) |             | ❌  |     |     |

<!-- end rules list -->"
`;

exports[`generator #generate deprecated rules updates the documentation 1`] = `
"<!-- begin rules list -->

| Rule                           | Description  | ✅  | 🔧  | 💡  |
| ------------------------------ | ------------ | --- | --- | --- |
| [no-bar](docs/rules/no-bar.md) | Description. | ❌  |     |     |
| [no-baz](docs/rules/no-baz.md) | Description. | ❌  |     |     |
| [no-foo](docs/rules/no-foo.md) | Description. | ❌  |     |     |

<!-- end rules list -->"
`;

exports[`generator #generate deprecated rules updates the documentation 2`] = `
"# Description (\`test/no-foo\`)

❌ This rule is deprecated. It was replaced by [no-bar](no-bar.md).

<!-- end rule header -->
"
`;

exports[`generator #generate deprecated rules updates the documentation 3`] = `
"# Description (\`test/no-bar\`)

❌ This rule is deprecated.

<!-- end rule header -->
"
`;

exports[`generator #generate deprecated rules updates the documentation 4`] = `
"# Description (\`test/no-baz\`)

❌ This rule is deprecated.

<!-- end rule header -->
"
`;

exports[`generator #generate no existing comment markers - minimal doc content generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  |
| ------------------------------ | ---------------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     | 🔧  |     |

<!-- end rules list -->
"
`;

exports[`generator #generate no existing comment markers - minimal doc content generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

🔧 This rule is automatically fixable using the \`--fix\` [option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix) on the command line.

<!-- end rule header -->
"
`;

exports[`generator #generate no existing comment markers - with no blank lines in existing content generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  |
| ------------------------------ | ---------------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     | 🔧  |     |

<!-- end rules list -->
Existing rules section content."
`;

exports[`generator #generate no existing comment markers - with no blank lines in existing content generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

🔧 This rule is automatically fixable using the \`--fix\` [option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix) on the command line.

<!-- end rule header -->
Existing rule doc content."
`;

exports[`generator #generate no existing comment markers - with one blank line around existing content generates the documentation 1`] = `
"## Rules
<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  |
| ------------------------------ | ---------------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     | 🔧  |     |

<!-- end rules list -->

Existing rules section content."
`;

exports[`generator #generate no existing comment markers - with one blank line around existing content generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

🔧 This rule is automatically fixable using the \`--fix\` [option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix) on the command line.

<!-- end rule header -->

Existing rule doc content."
`;

exports[`generator #generate no prettier config generates the documentation 1`] = `
"<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  |
| ------------------------------ | ---------------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     | 🔧  |     |

<!-- end rules list -->"
`;

exports[`generator #generate no prettier config generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

🔧 This rule is automatically fixable using the \`--fix\` [option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix) on the command line.

<!-- end rule header -->
## Rule details
details
Long line that SHOULD NOT get wrapped by prettier since it's outside the header. Long line that SHOULD NOT get wrapped by prettier since it's outside the header.""
`;

exports[`generator #generate only a \`recommended\` config updates the documentation 1`] = `
"<!-- begin rules list -->

| Rule                           | Description  | ✅  | 🔧  | 💡  |
| ------------------------------ | ------------ | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description. | ✅  |     |     |

<!-- end rules list -->"
`;

exports[`generator #generate only a \`recommended\` config updates the documentation 2`] = `
"# Description (\`test/no-foo\`)

✅ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
"
`;

exports[`generator #generate rule doc without header marker but pre-existing header updates the documentation 1`] = `
"# Description (\`test/no-foo\`)

✅ This rule is enabled in the \`recommended\` config.

<!-- end rule header -->
Pre-existing notice about the rule being recommended.
## Rule details
Details."
`;

exports[`generator #generate successful updates the documentation 1`] = `
"# eslint-plugin-test
Description.
## Rules
<!-- begin rules list -->

| Rule                           | Description            | 💼         | 🔧  | 💡  |
| ------------------------------ | ---------------------- | ---------- | --- | --- |
| [no-bar](docs/rules/no-bar.md) | Description of no-bar. | ![style][] | 🔧  |     |
| [no-baz](docs/rules/no-baz.md) | Description of no-boz. |            |     |     |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. | ✅         | 🔧  | 💡  |

<!-- end rules list -->
more content."
`;

exports[`generator #generate successful updates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

💼 This rule is enabled in the following configs: \`all\`, \`recommended\`.

🔧 This rule is automatically fixable using the \`--fix\` [option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix) on the command line.

💡 This rule provides [suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions) that can be applied manually.

<!-- end rule header -->
## Rule details
details
## Options
optionToDoSomething1 - explanation
optionToDoSomething2 - explanation"
`;

exports[`generator #generate successful updates the documentation 3`] = `
"# Description of no-bar (\`test/no-bar\`)

💼 This rule is enabled in the following configs: \`all\`, \`style\`.

🔧 This rule is automatically fixable using the \`--fix\` [option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix) on the command line.

<!-- end rule header -->
## Rule details
details"
`;

exports[`generator #generate successful updates the documentation 4`] = `
"# Description of no-boz (\`test/no-baz\`)

<!-- end rule header -->
## Rule details
details"
`;

exports[`generator #generate uses prettier config from package.json should wrap prose in rule doc header to just 20 chars 1`] = `
"<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  |
| ------------------------------ | ---------------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     |     |     |

<!-- end rules list -->"
`;

exports[`generator #generate uses prettier config from package.json should wrap prose in rule doc header to just 20 chars 2`] = `
"# Description of no-foo (\`test/no-foo\`)

💼 This rule is
enabled in the
following configs:
\`all\`.

<!-- end rule header -->
## Rule details
details
Long line that SHOULD NOT get wrapped by prettier since it's outside the header. Long line that SHOULD NOT get wrapped by prettier since it's outside the header."
`;

exports[`generator #generate with no blank lines around comment markers generates the documentation 1`] = `
"# Rules

No blank line after this.
<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  |
| ------------------------------ | ---------------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     | 🔧  |     |

<!-- end rules list -->
No blank line before this."
`;

exports[`generator #generate with no blank lines around comment markers generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

🔧 This rule is automatically fixable using the \`--fix\` [option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix) on the command line.

<!-- end rule header -->
No blank line before this."
`;

exports[`generator #generate with one blank line around comment markers generates the documentation 1`] = `
"# Rules

One blank line after this.

<!-- begin rules list -->

| Rule                           | Description            | ✅  | 🔧  | 💡  |
| ------------------------------ | ---------------------- | --- | --- | --- |
| [no-foo](docs/rules/no-foo.md) | Description of no-foo. |     | 🔧  |     |

<!-- end rules list -->

One blank line before this."
`;

exports[`generator #generate with one blank line around comment markers generates the documentation 2`] = `
"# Description of no-foo (\`test/no-foo\`)

🔧 This rule is automatically fixable using the \`--fix\` [option](https://eslint.org/docs/latest/user-guide/command-line-interface#--fix) on the command line.

<!-- end rule header -->

One blank line before this."
`;
